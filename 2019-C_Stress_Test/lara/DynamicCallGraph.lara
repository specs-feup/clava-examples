import clava.ClavaJoinPoints;
import clava.Clava;
import lara.code.Logger;

/**
 * Instruments code in order to build a runtime call graph.
 */
aspectdef DynamicCallGraph

    var obj = new LaraObject();

	var dcgName = "clava_dcg_global";

    /* Instrument function calls and increment the corresponding position */
    select function.call end
    apply
        var id = obj.getId($function.name, $call.name);
        $call. insert after '[[dcgName]][ [[id]] ]++;';
    end


    /* Declare the array in each file */
    var total = obj.getTotal();
    select file.function end
    apply
        if($file.hasMain) {
            insert before 'int [[dcgName]][ [[total]] ] = {0};';
        } else {
            insert before 'extern int [[dcgName]][ [[total]] ];';
        }
        break;
    end


	// Build function to print call graph
	var callgraphFunctionName = "clava_call_graph";
	var $callgraph = ClavaJoinPoints.functionDecl(callgraphFunctionName, ClavaJoinPoints.builtinType("void"));
	$callgraph.setBody(ClavaJoinPoints.scope());

    // Insert function before main
    select program.function{"main"} end
    apply
 		$function.insertBefore($callgraph);
    end

	var graphLogger = new Logger();
	graphLogger.append("digraph dynamic_call_graph {")
		.ln().ln().log($callgraph.body);


	var $lastStmt = graphLogger.getAfterJp();


     for (f in obj) {
         for (c in obj[f]) {
             var id = obj[f][c];
             var dcgCount = dcgName+"["+id+"]";
             $lastStmt = $lastStmt.insertAfter(ClavaJoinPoints.ifStmt(dcgCount + " != 0"));
             
             graphLogger.append("\t"+f+" -> "+c+' [label=\"')
             		.int(dcgCount)
             		.append('\"];').ln()
             		.logBefore($lastStmt.then);
             //callgraphCode += %{
             //    if ([[dcgName]][ [[id]] ] != 0)
             //        printf("\t[[f]] -> [[c]] [label=\"%d\"];\n", [[dcgName]][ [[id]] ]);
             //}%;
         }
    }

	graphLogger.append("}").ln().log($lastStmt);

/*
	var callgraphCode = "";
	callgraphCode += 'printf("digraph dynamic_call_graph {\\n\\n");';
    
     for (f in obj) {
         for (c in obj[f]) {
    
             var id = obj[f][c];
             callgraphCode += %{
                 if (call_graph[ [[id]] ] != 0)
                     printf("\t[[f]] -> [[c]] [label=\"%d\"];\n", [[dcgName]][ [[id]] ]);
             }%;
         }
    }
    callgraphCode += %{printf("}\n");}%;
    $callgraph.body.insertBegin(callgraphCode);
*/

	// Register function to be executed when program exits
    Clava.getProgram().atexit($callgraph);

	/*
    select function{"main"} end
    apply
        
        $function.insertReturn('printf("digraph call_graph {\\n\\n");');

        for (f in obj) {
            for (c in obj[f]) {

                var id = obj[f][c];
                $function.insertReturn(%{
                    if (call_graph[ [[id]] ] != 0)
                        printf("\t[[f]] -> [[c]] [label=\"%d\"];\n", call_graph[ [[id]] ]);
                }%);
            }
        }
        $function.insertReturn(%{printf("}\n");}%);
    end
    */


    println('\nDynamicCallGraph done!');
end
